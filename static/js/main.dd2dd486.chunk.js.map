{"version":3,"sources":["components/logo.svg","components/records/RecordForm.jsx","components/records/RecordDisplay.jsx","components/records/RecordWorkoutInfo.jsx","components/records/RecordWorkouts.jsx","components/LogoDisplay.jsx","components/Home.jsx","components/SideBar.jsx","components/Navigation.jsx","components/auth/registerForms/Credentials.jsx","components/auth/registerForms/Details.jsx","components/auth/registerForms/Contact.jsx","components/auth/registerForms/CredentialsForm.jsx","components/auth/registerForms/ContactForm.jsx","components/auth/registerForms/DetailsForm.jsx","components/auth/Register.jsx","components/auth/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","RecordForm","props","workout","workout_type","_id","useState","formData","pb_date","rDate","setRDate","pbWeight","setPbWeight","pbTimeMin","setPbTimeMin","pbTimeSec","setPbTimeSec","pbChangeHandler","e","setFormData","target","name","value","formAddHandler","a","addHandler","Date","toISOString","substring","Col","Form","Group","as","Row","className","Control","size","type","placeholder","onChange","Button","onClick","RecordDisplay","record","pb_time_min","pb_time_sec","pb_weight","prescribed","liked_by","prescribed_male","description","prescribed_female","pb_value","workout_name","toString","padStart","pb_date_display","moment","diff","format","fromNow","deleteHandler","record_id","token","localStorage","getItem","Axios","delete","process","headers","fetchRecords","handleClose","console","log","showDel","setShowDel","recordDisplay","xs","variant","Modal","show","onHide","Header","closeButton","Footer","WorkoutInfo","getPb","records","length","pbwt","forEach","r","pbtime","totalTime","Math","floor","pb_details_blk","workout_id","setRecords","pb","setPb","get","getRes","data","useEffect","post","sort","b","Accordion","Card","Toggle","eventKey","Collapse","Body","map","key","Workouts","workouts","setWorkouts","filteredWorkouts","setFilteredWorkouts","filterClickHandler","filtered","filter","w","userRecords","allWorkouts","userToken","recordsRes","workoutsRes","push","compareRecords","fetchRecordsDisplay","latestDateA","getLatestRecordDate","latestDateB","recArr","latestDate","LogoDisplay","src","logo","alt","Home","user","username","SideBar","history","useHistory","to","closeMenu","clear","Navigation","open","setOpen","isOpen","onStateChange","state","handleStateChange","pageWrapId","outerContainerId","Component","CredentialsForm","useFormik","initialValues","password","validationSchema","Yup","shape","required","test","Promise","resolve","reject","then","res","message","catch","error","min","onSubmit","values","saveData","nextStep","getFieldProps","handleSubmit","errors","touched","Label","id","ContactForm","firstname","lastname","email","DetailsForm","gender","height","weight","home_gym","date_of_birth","oneOf","nullable","detailData","user_details","registerUser","controlId","disabled","selected","Text","Register","step","setState","previousStep","tmp","addToObject","userDetails","setItem","err","obj","display","this","Login","credentials","setCredentials","changeHandler","preventDefault","loginHandler","URL","App","isAuth","setIsAuth","setUser","getUserProfile","decode","removeItem","Container","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd2dd486.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c4c0a4c3.svg\";","import React, { useState } from 'react'\nimport { Form, Row, Col, Button } from 'react-bootstrap'\nimport WeightForm from './WeightForm'\nimport TimeForm from './TimeForm'\nimport { useEffect } from 'react';\n\nexport default function RecordForm(props) {\n\n    let { _id, workout_type } = props.workout;\n\n    //Date handler to handle display\n    const [rDate, setRDate] = useState(props.formData.pb_date);\n    const [pbWeight, setPbWeight] = useState(\"\");\n    const [pbTimeMin, setPbTimeMin] = useState(\"\");\n    const [pbTimeSec, setPbTimeSec] = useState(\"\");\n\n    let dateChangeHandler = (e) => {\n        setRDate(e.target.value);\n        pbChangeHandler(e);\n    }\n\n    let pbWeightChangeHandler = (e) => {\n        setPbWeight(e.target.value);\n        pbChangeHandler(e);\n    }\n\n    let pbTimeMinChangeHandler = (e) => {\n        setPbTimeMin(e.target.value);\n        pbChangeHandler(e);\n    }\n\n    let pbTimeSecChangeHandler = (e) => {\n        setPbTimeSec(e.target.value);\n        pbChangeHandler(e);\n    }\n\n    let pbChangeHandler = (e) => {\n        props.setFormData({\n            ...props.formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    let formAddHandler = async () => {\n        await props.addHandler()\n        setRDate(new Date().toISOString().substring(0, 10))\n        setPbWeight(\"\");\n        setPbTimeMin(\"\");\n        setPbTimeSec(\"\");\n    }\n    // console.log(props.formData);\n\n\n    return (\n        <Col>\n            <Form>\n                <Form.Group as={Row}>\n                    <Col className=\"col-5 p-0\">\n                        {workout_type !== \"weightlifting\"\n                            && (<Row className=\"mx-2 text-center\">\n                                <Col\n                                    className=\"p-0 time__input\"\n                                // xs={{span:5, offset:0}}\n                                >\n                                    <Form.Control\n                                        className=\"text-center\"\n                                        size=\"sm\"\n                                        type=\"number\"\n                                        placeholder=\"00\"\n                                        value={pbTimeMin}\n                                        name=\"pb_time_min\"\n                                        onChange={pbTimeMinChangeHandler}\n\n                                    />\n                                </Col >\n                                {/* <Col xs={{span:2, offset:0}}> */}\n                                <span className=\"my-auto mx-1\">:</span>\n                                {/* </Col> */}\n                                <Col\n                                    className=\"p-0 time__input\"\n                                // xs={{span:5, offset:0}}\n                                // className=\"pl-1 time__input\"\n                                >\n                                    <Form.Control\n                                        className=\"text-center\"\n                                        size=\"sm\"\n                                        type=\"number\"\n                                        placeholder=\"00\"\n                                        value={pbTimeSec}\n                                        name=\"pb_time_sec\"\n                                        onChange={pbTimeSecChangeHandler}\n                                    />\n                                </Col>\n                            </Row>)}\n                        <Col>\n                            <Form.Control\n                                size=\"sm\"\n                                type=\"number\"\n                                placeholder=\"lb\"\n                                value={pbWeight}\n                                name=\"pb_weight\"\n                                onChange={pbWeightChangeHandler} />\n                            {/* <span className=\"my-auto\">lb</span> */}\n                        </Col>\n                    </Col>\n                    <Col className=\"col-5 p-0\">\n                        <Form.Control\n                            size=\"sm\"\n                            type=\"date\"\n                            value={rDate}\n                            name=\"pb_date\"\n                            onChange={dateChangeHandler} />\n                    </Col>\n                    <Col\n                        className=\"col-2 p-0 pl-1 \"\n                    >\n                        <Button\n                            className=\"btn btn-block\"\n                            size=\"sm\"\n                            onClick={formAddHandler}\n                        >\n                            +\n                        </Button>\n                    </Col>\n                </Form.Group >\n            </Form>\n        </Col>\n    )\n}\n","import React, { useState } from 'react'\nimport { Col, Row, Button, Modal } from 'react-bootstrap'\nimport moment from 'moment';\nimport Axios from 'axios';\nconst URL = process.env.REACT_APP_URL;\n\nexport default function RecordDisplay(props) {\n\n    let { pb_date, pb_time_min, pb_time_sec, pb_weight, prescribed, liked_by } = props.record;\n    let { _id, description, prescribed_female, prescribed_male, workout_name, workout_type } = props.workout;\n\n    //SET PB VALUE\n    let pb_value = \"\";\n    switch (workout_type) {\n        case \"weightlifting\":\n            pb_value = `${pb_weight}lb`;\n            break;\n        case \"benchmark\":\n            pb_value = `${pb_time_min}:${pb_time_sec.toString().padStart(2, '0')}`\n            break;\n        default:\n            break;\n    }\n    let pb_date_display = moment().diff(pb_date, \"days\") > 5 ? moment(pb_date).format(\"D MMM YYYY\") : moment(pb_date).fromNow();\n\n    //HANDLE RECORD DELETION\n    let deleteHandler = async (record_id) => {\n        let token = localStorage.getItem(\"token\");\n        try {\n            let delRes = await Axios.delete(`${URL}/records/${record_id}`,\n                {\n                    headers: {\n                        \"x-auth-token\": token\n                    }\n                })\n            await props.fetchRecords();\n            handleClose();\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    const [showDel, setShowDel] = useState(false);\n    const handleClose = () => setShowDel(false);\n    const handleShow = () => setShowDel(true)\n\n    let recordDisplay = (\n        <>\n            <Row className=\"my-2\">\n                <Col xs={5}>\n                    <Row className=\"\">\n                        <Col\n                            // xs={9}\n                            className=\"text-right p-0\">\n                            {pb_value}\n                        </Col>\n                        <Col\n                            // xs={3}\n                            className=\"p-0 pl-1 text-center\">\n                            {prescribed_male && prescribed && \"Rx\"}\n                        </Col>\n                    </Row>\n                </Col>\n                <Col xs={5} className=\"text-muted font-italic text-center\">{pb_date_display}</Col>\n                <Col xs={2}>\n                    <Button\n                        size=\"sm\"\n                        variant=\"outline-danger\"\n                        onClick={handleShow}\n                    >\n                        -\n                    </Button>\n                </Col>\n            </Row>\n            <Modal show={showDel} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    Delete record?\n                </Modal.Header>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        No\n                    </Button>\n                    <Button variant=\"danger\" onClick={() => deleteHandler(props.record._id)}>\n                        Yes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n\n    return (\n        <div>\n            {recordDisplay}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Card, Col, Accordion, Row } from 'react-bootstrap'\nimport RecordForm from './RecordForm';\nimport RecordDisplay from './RecordDisplay';\nimport Axios from 'axios';\nconst URL = process.env.REACT_APP_URL;\n\nexport default function WorkoutInfo(props) {\n\n    //Helper function to get PB depending on workout type\n    let getPb = () => {\n        if (records.length > 0) {\n            switch (workout.workout_type) {\n                case \"weightlifting\":\n                    let pbwt = records[0].pb_weight;\n                    records.forEach(r => {\n                        if (pbwt < r.pb_weight) pbwt = r.pb_weight\n                    })\n                    return `${pbwt}lb`\n                case \"benchmark\":\n                    let pbtime = 86400;\n                    //CONVERT MIN TO SEC + SEC\n                    // let pbtime = records[0]./\n                    records.forEach(r => {\n                        let totalTime = r.pb_time_min * 60 + r.pb_time_sec;\n                        if (pbtime > totalTime) {\n                            pbtime = totalTime\n                        }\n                    })\n                    return `${Math.floor(pbtime / 60)}:${(pbtime % 60).toString().padStart(2, '0')}`\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    //STATES FOR FORM VALUES\n    const [rDate, setRDate] = useState(new Date().toISOString().substring(0, 10))\n    let pb_details_blk = {\n        pb_date: rDate, pb_weight: null, pb_time_min: null, pb_time_sec: null, workout_id: props.workout._id\n    }\n    const [formData, setFormData] = useState(pb_details_blk);\n\n    //STATES FOR WORKOUT PROPS\n    const [workout, setWorkout] = useState(props.workout);\n    const [records, setRecords] = useState(props.workout.records);\n    const [pb, setPb] = useState(getPb());\n\n    let fetchRecords = async () => {\n        let token = localStorage.getItem(\"token\");\n        let getRes = await Axios.get(`${URL}/records/workouts/${props.workout._id}`,\n            { headers: { \"x-auth-token\": token } });\n        setRecords(getRes.data.records);\n        setPb(getPb());\n        console.log(pb)\n    }\n\n    useEffect(() => {\n        fetchRecords();\n    }, [])\n    // console.log(workout);\n\n\n    //HANDLE NEW PB INPUT FOR EACH WORKOUT\n    let addHandler = async () => {\n        //AXIOS CALL TO ADD NEW RECORD, USING USER TOKEN\n        let token = localStorage.getItem(\"token\");\n        let postRes = await Axios.post(`${URL}/records`, formData, { headers: { \"x-auth-token\": token } });\n        //Fetch records and update records state\n        fetchRecords();\n    }\n    //SORT RECORDS BY TIME\n    //Sort helper function\n    let compareRecords = (a, b) => {\n        if (a.pb_date > b.pb_date) {\n            return -1;\n        } else if (a.pb_date < b.pb_date) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    records.sort(compareRecords);\n    // console.log(records)\n    return (\n        <Col className=\"mx-auto my-1 \">\n            <Accordion>\n                <Card>\n                    <Accordion.Toggle className=\"text-left\" as={Card.Header} eventKey=\"0\">\n                        <Row>\n                            <Col>\n                                {workout.workout_name}\n                            </Col>\n                            <Col className=\"text-right\">\n                                {pb}\n                            </Col>\n                        </Row>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"small__text\">\n                            <Row className=\"\">\n                                <RecordForm\n                                    workout={workout}\n                                    formData={formData}\n                                    setFormData={setFormData}\n                                    addHandler={addHandler}\n                                />\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {records.map(r => (\n                                        <RecordDisplay\n                                            workout={workout}\n                                            record={r}\n                                            key={r._id}\n                                            fetchRecords={fetchRecords}\n                                        />\n                                    ))}\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </Col>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport RecordWorkoutInfo from './RecordWorkoutInfo';\nimport { Button } from 'react-bootstrap';\nimport Axios from 'axios';\nconst URL = process.env.REACT_APP_URL;\n\nexport default function Workouts() {\n\n    const [workouts, setWorkouts] = useState(null);\n    const [filteredWorkouts, setFilteredWorkouts] = useState(workouts)\n\n    let filterClickHandler = async (e) => {\n        let filtered = []\n        if (e.target.value !== \"all\") {\n            filtered = workouts.filter((w) => w.workout_type === e.target.value)\n        } else {\n            filtered = workouts\n        }\n        setFilteredWorkouts(filtered);\n    }\n\n    //DISPLAY LIST OF WORKOUTS (SORTED BY LAST ENTERED), INCLUSIVE OF THOSE WITHOUT RECORDS AT THE TAIL\n    //TRANSFORM FOR DISPLAY\n    useEffect(\n        () => {\n            let token = localStorage.getItem(\"token\");\n            let userRecords = null;\n            let allWorkouts = null;\n\n            const fetchRecordsDisplay = async (userToken) => {\n                try {\n                    //AXIOS CALL TO PULL ALL RECORDS BY USER\n                    let recordsRes = await Axios.get(`${URL}/records`, { headers: { \"x-auth-token\": userToken } })\n                    userRecords = recordsRes.data.records;\n\n                    //AXIOS CALL TO PULL ALL WORKOUTS AVAILABLE\n                    let workoutsRes = await Axios.get(`${URL}/workouts`)\n                    allWorkouts = workoutsRes.data.workouts;\n\n                    //FOR EACH WORKOUT\n                    allWorkouts.forEach(w => {\n                        w[\"records\"] = [];\n\n                        //FOR EACH RECORD\n                        userRecords.forEach(r => {\n\n                            //IF RECORD BELONGS TO WORKOUT, PUSH INTO WORKOUT RECORDS ARRAY\n                            if (w._id.toString() == r.workout_id.toString()) {\n                                w[\"records\"].push(r)\n                            }\n                        })\n                    })\n\n                    //SET STATES UPON FETCHING\n                    allWorkouts.sort(compareRecords);\n                    setWorkouts(allWorkouts);\n                    setFilteredWorkouts(allWorkouts);\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n            fetchRecordsDisplay(token);\n        }, []\n    );\n\n    //Sort helper functions\n    let compareRecords = (a, b) => {\n        //IF BOTH WORKOUT HAS RECORDS\n        if (a.records.length > 0 && b.records.length > 0) {\n            let latestDateA = getLatestRecordDate(a.records);\n            let latestDateB = getLatestRecordDate(b.records);\n            if (latestDateA > latestDateB) {\n                return -1;\n            } else if (latestDateA < latestDateB) {\n                return 1;\n            } else {\n                return 0;\n            }\n            //ONLY B HAS RECORDS\n        } else if (a.records.length == 0 && b.records.length > 0) {\n            return 1\n            //ONLY A HAS RECORDS\n        } else if (b.records.length == 0 && a.records.length > 0) {\n            return -1\n            //BOTH HAS NO RECORDS\n        } else {\n            return 0\n        }\n    }\n\n    let getLatestRecordDate = (recArr) => {\n        let latestDate = recArr[0].pb_date\n        //for each record, get \n        recArr.forEach(r => {\n            if (r.pb_date > latestDate) latestDate = r.pb_date;\n        })\n        return latestDate\n    }\n\n    return (\n        <div>\n            <div className=\"my-2\">\n                <Button value=\"all\" onClick={filterClickHandler} variant=\"outline-dark\">All</Button>{\" \"}\n                <Button value=\"weightlifting\" onClick={filterClickHandler} variant=\"outline-dark\">Weightlifting</Button>{\" \"}\n                <Button value=\"benchmark\" onClick={filterClickHandler} variant=\"outline-dark\">Benchmark WODs</Button>{\" \"}\n            </div>\n\n            {filteredWorkouts ?\n                (\n                    filteredWorkouts.map(w => (\n                        <RecordWorkoutInfo workout={w} key={w._id} />\n                    ))\n                )\n                : \"STANDBY FOR GAINS\"\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport logo from './logo.svg'\n\nexport default function LogoDisplay() {\n    return (\n        <div className=\"text-center\">\n            <img  src={logo} alt=\"pbandjot\"/> <br />PB&J\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport LogoDisplay from './LogoDisplay'\n\nexport default function Home({user}) {\n    // let {username} = props.user;\n    return (\n        <div className=\"text-center\">\n            <LogoDisplay />\n            Record your personal bests.\n            {user && (<div>{user.username}</div>)}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function SideBar(props) {\n\n    const history = useHistory();\n    \n    let logoutHandler = () => {    \n        localStorage.clear(\"token\")\n        props.closeMenu();\n        history.push(\"/\")   \n    }\n\n    return (\n        <div>\n            <Link to=\"/\" onClick={props.closeMenu} className=\"bm-item\">Home</Link>\n            <Link to=\"/records\" onClick={props.closeMenu} className=\"bm-item\">Records</Link>\n            <Link to=\"/register\" onClick={props.closeMenu} className=\"bm-item\">Register</Link>\n            <Link to=\"/login\" onClick={props.closeMenu} className=\"bm-item\">Login</Link>\n            <Link to=\"#\" onClick={logoutHandler} className=\"bm-item\">Logout</Link>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport SideBar from './SideBar'\n// import LogoDisplay from './LogoDisplay';\nimport { slide as Menu } from 'react-burger-menu'\n// import { Button } from 'react-bootstrap';\n\n\nexport default function Navigation() {\n\n    const [open, setOpen] = useState(false);\n\n    let handleStateChange = (state) => {\n        setOpen(state.isOpen)\n    }\n    let closeMenu = () => {\n\n        setOpen(false);\n        // console.log(open)\n        console.log(\"something happened\")\n    }\n\n    return (\n        <>\n            <Menu\n                isOpen={open}\n                onStateChange={(state) => handleStateChange(state)}\n            // noTransition\n            pageWrapId={ \"page-wrap\" } outerContainerId={ \"outer-container\" }\n            >\n                {/* <Button onClick={closeMenu}>Toggle</Button> */}\n                <SideBar closeMenu={closeMenu} />\n            </Menu>\n        </>\n    )\n}\n","import { Form, Button } from 'react-bootstrap'\nimport React, { Component } from 'react'\n\nexport default class Credentials extends Component {\n    state = {\n        username: null,\n        password: null\n    }\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    };\n\n    nextClicked = (e) => {\n        // console.log(this.state)\n        e.preventDefault();\n        //check if username is taken with an API call\n        this.props.saveData(this.state);\n        this.props.nextStep();\n    }\n\n    render() {\n        return (\n            <div>\n                <Form.Group>\n                    <Form.Label>Select a Username</Form.Label>\n                    <Form.Control\n                        onChange={this.changeHandler}\n                        type=\"text\" name=\"username\" placeholder=\"Username\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        onChange={this.changeHandler}\n                        type=\"password\" name=\"password\" placeholder=\"\" />\n                </Form.Group>\n                <Button onClick={this.nextClicked}>Next</Button>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nexport default class Details extends Component {\n    state = {\n        gender: null,\n        user_details: {\n            height: null,\n            weight: null,\n            home_gym: null,\n            profile_image_path: null\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    };\n\n    detailsChangeHandler = (e) => {\n        let tmp = this.state\n        tmp.user_details[e.target.name] = e.target.value\n        this.setState(tmp)\n    };\n\n    nextClicked = (e) => {\n        // console.log(this.state)\n        e.preventDefault();\n        this.props.saveData(this.state);\n        //save to DB\n        this.props.registerUser()\n        // this.props.nextStep();\n    }\n\n    render() {\n        return (\n            <div>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Control\n                        as=\"select\"\n                        onChange={this.changeHandler}\n                        name=\"gender\"\n                    >\n                        <option disabled selected>Gender</option>\n                        <option value=\"M\">Male</option>\n                        <option value=\"F\">Female</option>\n                    </Form.Control>\n                    <Form.Text className=\"text-muted\">\n                        For tracking your Rx workouts.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control\n                        onChange={this.detailsChangeHandler}\n                        type=\"number\" name=\"height\" placeholder=\"Height in cm\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control\n                        onChange={this.detailsChangeHandler}\n                        type=\"number\" name=\"weight\" placeholder=\"Weight in kg\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control\n                        onChange={this.detailsChangeHandler}\n                        type=\"text\" name=\"home_gym\" placeholder=\"Gym name\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Date of Birth</Form.Label>\n                    <Form.Control\n                        type=\"date\"\n                        name=\"date_of_birth\"\n                        onChange={this.detailsChangeHandler}\n                    />\n                </Form.Group>\n                <Button onClick={this.nextClicked}>Register</Button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class Contact extends Component {\n    state = {\n        firstname: null,\n        lastname: null,\n        email: null\n    }\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    };\n\n    nextClicked = (e) => {\n        e.preventDefault();\n        this.props.saveData(this.state);\n        this.props.nextStep();\n    }\n\n    render() {\n        return (\n            <div>\n                   <Form.Group>\n                    <Form.Label>Your contact details</Form.Label>\n                    <Form.Control\n                        onChange={this.changeHandler}\n                        type=\"text\" name=\"firstname\" placeholder=\"First Name\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control\n                        onChange={this.changeHandler}\n                        type=\"text\" name=\"lastname\" placeholder=\"Last Name\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control\n                        onChange={this.changeHandler}\n                        type=\"email\" name=\"email\" placeholder=\"Email\" />\n                </Form.Group>\n                <Button onClick={this.nextClicked}>Next</Button>\n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup';\nimport Axios from 'axios';\nconst URL = process.env.REACT_APP_URL;\n\nexport default function CredentialsForm(props) {\n\n    const { getFieldProps, handleSubmit, values, errors, touched } = useFormik({\n        initialValues: {\n            username: \"\",\n            password: \"\"\n        },\n\n        validationSchema: Yup.object().shape({\n            username: Yup\n                .string()\n                .required(\"Required\")\n                .test(\n                    \"checkUsernameExists\", \"Username already exists\",\n                    function(username) {\n                        return new Promise((resolve, reject) => {\n                            Axios.get(`${URL}/auth/usercheck/${username}`)\n                            .then((res)=>{\n                                // console.log(res.data.message)\n                                if(res.data.message==\"User exists\"){\n                                    resolve(false)\n                                } else {\n                                    resolve(true)\n                                }\n                            }).catch((error)=>{\n                                console.log(error)\n                            })\n                        })\n                    }\n                ),\n            password: Yup\n                .string()\n                .min(8, \"Must be more than 8 characters\")\n                .required(\"Required\")\n        }),\n\n        onSubmit(values) {\n            // console.log(values);\n            props.saveData(values);\n            props.nextStep();\n        }\n    })\n\n    return (\n        <div>\n            <Form.Group>\n                <Form.Label>Select a Username</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    id=\"username\"\n                    placeholder=\"Username\"\n                    {...getFieldProps(\"username\")}\n                />\n                {/* {errors.username && touched.username ? errors.username : \"You are unique.\"} */}\n                {touched.username && (errors.username ? errors.username : \"You are unique.\")}\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    id=\"password\"\n                    placeholder=\"\"\n                    {...getFieldProps(\"password\")}\n                />\n                {errors.password && touched.password ? errors.password : null}\n            </Form.Group>\n            <Button\n                onClick={handleSubmit}\n            >Next</Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\nimport Axios from 'axios';\nconst URL = process.env.REACT_APP_URL;\n\nexport default function ContactForm(props) {\n\n    const { getFieldProps, handleSubmit, values, errors, touched } = useFormik({\n        initialValues: {\n            firstname: \"\",\n            lastname: \"\",\n            email: \"\"\n        },\n\n        validationSchema: Yup.object().shape({\n            firstname: Yup.string(),\n            lastname: Yup.string(),\n            email: Yup\n                .string()\n                .email(\"Invalid email address\")\n                .required(\"Required\")\n                .test(\n                    \"checkEmailExists\", \"Email already exists.\",\n                    function(email) {\n                        return new Promise((resolve, reject) => {\n                            Axios.get(`${URL}/auth/emailcheck/${email}`)\n                            .then((res)=>{\n                                // console.log(res.data.message)\n                                if(res.data.message==\"Email exists\"){\n                                    resolve(false)\n                                } else {\n                                    resolve(true)\n                                }\n                            }).catch((error)=>{\n                                console.log(error)\n                            })\n                        })\n                    }\n                ),\n        }),\n\n        onSubmit(values) {\n            // console.log(values);\n            props.saveData(values);\n            props.nextStep();\n        }\n    })\n\n\n    return (\n        <div>\n            <Form.Group>\n                <Form.Label>Your contact details</Form.Label>\n                <Form.Control\n                    // onChange={this.changeHandler}\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    {...getFieldProps(\"firstname\")}\n                />\n                {errors.firstname && touched.firstname ? errors.firstname : null}\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    // onChange={this.changeHandler}\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    {...getFieldProps(\"lastname\")}\n                />\n                {errors.lastname && touched.lastname ? errors.lastname : null}\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    // onChange={this.changeHandler}\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    {...getFieldProps(\"email\")}\n                />\n                {errors.email && touched.email ? errors.email : null}\n            </Form.Group>\n            <Button\n                onClick={handleSubmit}\n            >Next</Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\n\nexport default function DetailsForm(props) {\n    const { getFieldProps, handleSubmit, values, errors, touched } = useFormik({\n        initialValues: {\n            gender: \"Gender\",\n            height: null,\n            weight: null,\n            home_gym: \"\",\n            date_of_birth: \"\"\n        },\n\n        validationSchema: Yup.object().shape({\n            gender: Yup.mixed().oneOf([\"M\", \"F\"], \"Please select gender.\"),\n            height: Yup.number().nullable(),\n            weight: Yup.number().nullable(),\n            home_gym: Yup.string(),\n            date_of_birth: Yup.date(),\n        }),\n\n        onSubmit(values) {\n            console.log(values);\n\n            let detailData = {\n                gender: values.gender,\n                user_details: {\n                    height: values.height,\n                    weight: values.weight,\n                    home_gym: values.home_gym,\n                    date_of_birth: values.date_of_birth\n                }\n            }\n            props.saveData(detailData);\n            props.registerUser();\n        }\n    })\n    return (\n        <div>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Control\n                    as=\"select\"\n                    name=\"gender\"\n                    {...getFieldProps(\"gender\")}\n\n                >\n                    <option disabled selected>Gender</option>\n                    <option value=\"M\">Male</option>\n                    <option value=\"F\">Female</option>\n                </Form.Control>\n                <Form.Text className=\"text-muted\">\n                    For tracking your Rx workouts.\n                    </Form.Text>\n                {errors.gender && touched.gender ? errors.gender : null}\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"number\"\n                    placeholder=\"Height in cm\"\n                    {...getFieldProps(\"height\")}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"number\"\n                    placeholder=\"Weight in kg\"\n                    {...getFieldProps(\"weight\")}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Gym name\"\n                    {...getFieldProps(\"home_gym\")}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Date of Birth</Form.Label>\n                <Form.Control\n                    type=\"date\"\n                    name=\"date_of_birth\"\n                    {...getFieldProps(\"date_of_birth\")}\n                />\n            </Form.Group>\n            <Button onClick={handleSubmit}>Register</Button>\n        </div>\n    )\n}\n","import { Form } from 'react-bootstrap'\nimport React, { Component } from 'react'\nimport Credentials from './registerForms/Credentials';\nimport Details from './registerForms/Details';\nimport Contact from './registerForms/Contact';\nimport Axios from 'axios'\nimport CredentialsForm from './registerForms/CredentialsForm';\nimport ContactForm from './registerForms/ContactForm';\nimport DetailsForm from './registerForms/DetailsForm';\nconst URL = process.env.REACT_APP_URL;\n\nexport default class Register extends Component {\n    state = {\n        step: 1,\n        firstname: null,\n        lastname: null,\n        username: null,\n        email: null,\n        password: null,\n        gender: null,\n        user_details: {\n            height: null,\n            weight: null,\n            home_gym: null,\n            date_of_birth: null,\n        }\n    }\n    //Increment state to next step\n    nextStep = () => {\n        this.setState({\n            step: this.state.step + 1\n        })\n    }\n\n    previousStep = () => {\n        this.setState({\n            step: this.state.step - 1\n        })\n    }\n\n    saveData = (data) => {\n        let tmp = this.state;\n        let res = this.addToObject(tmp, data)\n        this.setState({ res })\n        console.log(\"FROM REGISTER\")\n        console.log(this.state)\n    };\n\n    //helper function\n    addToObject(obj, data) {\n        for (let key in data) {\n            obj[key] = data[key]\n        }\n        return obj\n    }\n    \n    registerUser = () => {\n        //AXIOS CALL TO REGISTER\n        //registerUser(request_body)\n        let userDetails = this.state;\n        delete userDetails.step;\n        delete userDetails.res;\n        console.log(`REGISTERING WITH THIS`)\n        console.log(userDetails)\n\n        Axios.post(`${URL}/auth/register`, userDetails)\n            .then((res)=> {\n                console.log(res.data)\n                localStorage.setItem(\"token\",res.data.token)\n            })\n            .catch((err)=>{\n                console.log(err);\n            })\n        \n    }\n\n    // display = (<Credentials />\n    render() {\n        let display = \"\";\n        switch (this.state.step) {\n            case 1:\n                display = (<CredentialsForm\n                    saveData={this.saveData}\n                    nextStep={this.nextStep}\n                />)\n                break;\n            case 2:\n                display = (<ContactForm\n                    saveData={this.saveData}\n                    nextStep={this.nextStep}\n                />)\n                break;\n            case 3:\n                display = (<DetailsForm\n                    saveData={this.saveData}\n                    registerUser={this.registerUser}\n                />)\n                break;\n            default:\n                break;\n        }\n        return (\n            <>\n                <Form>\n                    <Form.Row>\n                        {display}\n                    </Form.Row>\n                </Form>\n            </>\n        )\n    }\n}\n\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap';\n\nexport default function Login(props) {\n\n    let cred_blk = {\n        username: null,\n        password: null\n    }\n\n    const [credentials, setCredentials] = useState(cred_blk);\n\n    let changeHandler = (e) => {\n        setCredentials({\n            ...credentials,\n            [e.target.name]: e.target.value\n        })\n    };\n\n    let loginHandler = (e) => {\n        e.preventDefault()\n        //AXIOS post to login\n        console.log(\"login clicked\")\n        // console.log(credentials)\n        props.loginHandler(credentials);\n    }\n\n\n    return (\n        <div>\n            <h1>Welcome back</h1>\n            <Form>\n                <Form.Group>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"username\"\n                        onChange={changeHandler}\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"\"\n                        onChange={changeHandler}\n                    />\n                </Form.Group>\n                <Button\n                    onClick={loginHandler}\n                >\n                    Login\n                </Button>\n            </Form>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport RecordWorkouts from './components/records/RecordWorkouts';\nimport Home from './components/Home';\nimport { Container } from 'react-bootstrap';\nimport Navigation from './components/Navigation';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Axios from 'axios';\nimport { useEffect } from 'react';\nimport { decode } from \"jsonwebtoken\";\nconst URL = process.env.REACT_APP_URL;\n\n\nfunction App() {\n\n    const [isAuth, setIsAuth] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [user, setUser] = useState(null);\n\n    let getUserProfile = (token) => {\n        // console.log(`TOKEN??:: ${token}`)\n        //AXIOS GET , return user details\n        Axios.get(`${URL}/auth/user`, { headers: { \"x-auth-token\": token } })\n            .then((res) => {\n                setIsAuth(true);\n                setUser(res.data.user);\n                // console.log(res.data.user);\n            }).catch((err) => {\n                console.log(err)\n            })\n\n\n    }\n\n    let loginHandler = (credentials) => {\n        Axios.post(`${URL}/auth/login`, credentials)\n            .then((res) => {\n                localStorage.setItem(\"token\", res.data.token)\n                getUserProfile(res.data.token);\n                setIsAuth(true);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    let logoutHandler = () => {\n\n    }\n\n    useEffect(\n        () => {\n            let token = localStorage.getItem(\"token\");\n            if (!(token == null)) {\n                //Get user profile each time page reloads\n                let decodedToken = decode(token);\n                if (!decodedToken) {\n                    localStorage.removeItem(\"token\");\n                } else {\n                    getUserProfile(token);\n                }\n            }\n        }, []\n    );\n\n\n    return (\n        <div\n        // id=\"outer-container\"\n        >\n            <Router>\n                <Navigation />\n                <div\n                    // id=\"page-wrap\"\n                    className=\"pt-5\"\n                >\n                    <Switch>\n                        <Container>\n                            <Route path=\"/\" exact>\n                                <Home user={user} />\n                            </Route>\n                            <Route path=\"/records\">\n                                <RecordWorkouts />\n                            </Route>\n                            <Route path=\"/register\" exact>\n                                <Register />\n                            </Route>\n                            <Route path=\"/login\" exact>\n                                {\n                                    isAuth ? <Home user={user} />\n                                        : <Login\n                                            loginHandler={loginHandler}\n                                        />\n                                }\n\n                            </Route>\n                        </Container>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}